#include <iostream.h>
#include <conio.h>

// Class declaration
class Complex {
private:
    double real;
    double imag;
public:
    // Constructor
    Complex(double r = 0.0, double i = 0.0) : real(r), imag(i) {}

    // Overloaded multiplication operator (*)
    Complex operator*(const Complex& other) {
        Complex temp;
        temp.real = (real * other.real) - (imag * other.imag);
        temp.imag = (real * other.imag) + (imag * other.real);
        return temp;
    }

    // Member function to display complex number
    void display() {
        cout << "Real: " << real << ", Imaginary: " << imag << endl;
    }
};

int main() {
    clrscr(); // Clear the screen

    // Creating two objects of Complex class
    Complex c1(2.0, 3.0);
    Complex c2(4.0, 5.0);

    // Multiplying complex numbers using overloaded operator
    Complex result = c1 * c2;
    result.display(); // Output: Real: -7, Imaginary: 22

    getch(); // Wait for a key press
    return 0;
}
