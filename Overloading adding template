#include <iostream.h>
#include <conio.h>

// Template function for addition
template <typename T>
T add(T a, T b) {
    return a + b;
}

// Overloaded template function for addition of two arrays
template <typename T, size_t N>
void add(const T (&arr1)[N], const T (&arr2)[N], T (&result)[N]) {
    for (size_t i = 0; i < N; ++i) {
        result[i] = arr1[i] + arr2[i];
    }
}

int main() {
    clrscr(); // Clear the screen

    // Adding two integers
    int sumInt = add(5, 3);
    cout << "Sum of integers: " << sumInt << endl; // Output: Sum of integers: 8

    // Adding two floating-point numbers
    float sumFloat = add(3.5f, 2.5f);
    cout << "Sum of floating-point numbers: " << sumFloat << endl; // Output: Sum of floating-point numbers: 6

    // Adding two arrays
    int arr1[] = {1, 2, 3, 4, 5};
    int arr2[] = {5, 4, 3, 2, 1};
    int result[5];
    add(arr1, arr2, result);
    cout << "Sum of arrays: ";
    for (int i = 0; i < 5; ++i) {
        cout << result[i] << " ";
    }
    cout << endl; // Output: Sum of arrays: 6 6 6 6 6

    getch(); // Wait for a key press
    return 0;
}
